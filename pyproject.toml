[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lighthouse"
version = "1.0.0"  # Phase 1 Complete with Security
description = "Multi-agent coordination platform with secure event-sourced foundation"
authors = [{name = "Your Name", email = "your.email@example.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators", 
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database :: Database Engines/Servers",
    "Topic :: Security",
    "Topic :: System :: Distributed Computing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    # Existing dependencies
    "mcp>=1.0.0",
    "pydantic>=2.0.0", 
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    
    # New dependencies for Phase 1
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=11.0.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",  # For client libraries
    "msgpack>=1.0.0",  # For serialization per ADR-002
]

[project.optional-dependencies]
dev = [
    # Existing dev dependencies
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    
    # New dev dependencies for Phase 1
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.1.0",
    "psutil>=5.9.0",  # For memory monitoring in tests
    "factory-boy>=3.3.0",  # For test data generation
]

performance = [
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.1",
]

[project.urls]
Homepage = "https://github.com/yourusername/lighthouse"
Repository = "https://github.com/yourusername/lighthouse.git"  
Issues = "https://github.com/yourusername/lighthouse/issues"

[project.scripts]
lighthouse = "lighthouse.server:main"  # Legacy MCP server
lighthouse-event-store = "lighthouse.event_store.store:main"  # Event Store CLI
lighthouse-api = "lighthouse.event_store.api:main"  # HTTP/WebSocket API server

[tool.setuptools.packages.find]
where = ["src"]
include = ["lighthouse*"]

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance benchmarks",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]